"""
Django settings for collaboard project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

from django.core.exceptions import ImproperlyConfigured
from dotenv import load_dotenv

load_dotenv()  # load environment variables


def get_env_var(env_var: str) -> str:
    value = os.getenv(env_var)
    if value is None:
        error_message = f"Set the {env_var} environment variable!"
        raise ImproperlyConfigured(error_message)
    return value


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

SECRET_KEY = get_env_var("DJANGO_SECRET_KEY")

DEBUG = False

# TODO: UPDATE THIS FOR PROD
ALLOWED_HOSTS: list[str] = ["18.189.119.43", "localhost"]


# Redirection destinations
LOGIN_URL = "login"
LOGOUT_REDIRECT_URL = "landing"

# Application definition
collaboard_apps: list[str] = [
    "apps.base",
    "apps.director",
    "apps.meeting",
    "apps.api",
]

INSTALLED_APPS = [
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    *collaboard_apps,
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_ratelimit.middleware.RatelimitMiddleware",
]
# Session configuration for WebSocket compatibility
# TODO: UPDATE THIS FOR PROD
SESSION_ENGINE = "django.contrib.sessions.backends.db"
SESSION_COOKIE_AGE = 3600  # 1 hour
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_HTTPONLY = False  # Allow WebSocket access
SESSION_COOKIE_SAMESITE = "Lax"


# Email configuration for email verification

# TODO: UPDATE THIS AFTER PROD TO A BETTER EMAIL PROVIDER (AMAZON SES)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = get_env_var("EMAIL_HOST")
EMAIL_USE_TLS = True
EMAIL_PORT = int(get_env_var("EMAIL_PORT"))
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_USER_PASSWORD")

ROOT_URLCONF = "collaboard.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# TODO: UPDATE THIS FOR PROD
# Cache Configs
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",  # Database 1
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}

RATELIMIT_VIEW = "apps.base.views.ratelimited"

# TODO: UPDATE THIS FOR PROD
# Channels Configs
WSGI_APPLICATION = "collaboard.wsgi.application"
ASGI_APPLICATION = "collaboard.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],  # Database 0
        },
    },
}


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# TODO: UPDATE THIS FOR PROD
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": get_env_var("DB_NAME_PROD"),
        "USER": get_env_var("DB_USER_PROD"),
        "PASSWORD": get_env_var("DB_PASSWORD_PROD"),
        "HOST": get_env_var("DB_HOST_PROD"),
        "PORT": get_env_var("DB_PORT_PROD"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_USER_MODEL = "base.CustomUser"

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/Toronto"

USE_I18N = True

USE_TZ = True

# Media files (exports)
MEDIA_URL = "/media/"
MEDIA_ROOT = "/home/ubuntu/Collaboard/mediafiles/"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / "static"  # global static folder
]
STATIC_ROOT = "/home/ubuntu/Collaboard/staticfiles/"  # for production (via collectstatic)

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
